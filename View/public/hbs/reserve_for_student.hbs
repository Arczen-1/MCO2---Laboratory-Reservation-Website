<!DOCTYPE html>
<hbs>

<link rel="stylesheet" href="css/universal.css">

    <head>
        
        <style>
            /* Default CSS Values */
            a:link, a:visited { 
              color:black;
              text-decoration: underline;
              cursor: auto;
            }
        </style>
    </head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <body>
        <div id = "top">
            <div id = "topLeft">
                <div id = "logo"><img src = "/images/DLSU.png"></div>
                <div id = "title">DLSU LABORATORY RESERVATION SYSTEM</div>
            </div>
            <div id = "topRight">

                <div class ="dropdown margin">
                    <button type="button" id="reservee" class="reservee">RESERVE</button>
                        <div class="dropdown-content">
                            <button type="button" class = "button innerlink" onclick="window.location.href='/reserve';">Reserve For Student</button>
                            <button type="button" class = "button innerlink" onclick="window.location.href='/remove';">Remove Reservation</button>
                            <button type="button" class = "button innerlink" onclick="window.location.href='/edit_reservations';">Edit Reservation</button>
                            <button type="button" class = "button innerlink " onclick="window.location.href='/view_reservations';">View Reservation</button>
                        </div>
                </div>
                
                
                <button id = "view" class = "dropbtn margin" onclick="window.location.href='/view_slot';">VIEW SLOT</button>
                <button type="button" id = "home" onclick="window.location.href='/homie';">Home</button>

                <div class ="dropdown margin">
                    <button type="button" id="icon" class = "dropbtn"><img src="/images/profile.png"></button>
                    <div class="dropdown-content-user">
                        <button type="button" class = "button innerlink" onclick="window.location.href='view_user';">View User Profile</button>
                        <button type="button" class = "button innerlink" onclick="window.location.href='edit_user';">Edit User Profile</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div id = "detailFather">
        <div class="detailContainer">
            <div class="details">
                To reserve a seat, select a date and time, input name, and click on a tile you want to reserve.
            </div>
        </div>
        <div id = "space">

        </div>
        <div class="detailContainerTwo">
            <div class="detailsTwo">
                RESERVE A SEAT
            </div>
        </div>

    </div>
        
        
        <div class="seatContainer">
            
            <div class="board">BOARD</div>
            <div class="legend">LEGEND
                <div class="resLegend">Available</div>
                <div class="availLegend">Reserved</div>
            </div>
            <div id="seatBoard">
            {{#each seats}}
            <div class="seat {{#if reserved}}seat taken{{/if}}" data-seat="{{this}}" onclick="reserveSeat('{{this}}')">{{this}}</div>
            {{/each}}
            </div>
            
            <div class="date">
                    <label for="selectedDate">Reservation Date: </label>
                    <input type="datetime-local" id="reservation" name="selectedDate" onchange="fetchReservedSeats()" step="3600">
                    <label for="name" id="label">Name: </label>
                    <input type="text" id="name" placeholder="Type your name here...">
                    <label for="name" id="label">Anonymous: </label>
                    <input type="checkbox" id="anonymous">
                </div>
            </div>
        </div>
            <script>
                async function reserveSeat(seat) {
                    const selectedDate = document.getElementById('reservation').value;
                    const name = document.getElementById('name').value;
                    const isAnonymous = document.getElementById('anonymous').checked;

                        if (!selectedDate) {
                            alert('Please select a date and time before reserving a seat.');
                            return;
                        }

                        if (!isAnonymous && name === "Type your name here..." || !isAnonymous && !name.trim()) {
                            alert('Please enter your name for the reservation.');
                            return;
                        }

                    try {
                        const response = await fetch('/reserve-seat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ name: isAnonymous ? null : name, seat, selectedDate, isAnonymous }),
                        });

                            if (!response.ok) {
                                const errorMessage = await response.json();
                                alert(`Error: ${errorMessage.error}`);
                                return;
                            }

                        const data = await response.json();
                        console.log('Reservation Response:', data);

                        
                        const successMessage = isAnonymous
                        ? `You successfully reserved a seat on ${selectedDate}.`
                        : `${name} successfully reserved a seat on ${selectedDate}.`;

                        alert(successMessage);

                        document.querySelector(`[data-seat="${seat}"]`).classList.toggle('taken');

                        
                        fetchReservedSeats();
                    } catch (error) {
                        console.error('Error reserving seat:', error);
                        alert('An unexpected error occurred. Please try again.');
                    }
                }

                async function fetchReservedSeats() {
                    const selectedDate = document.getElementById('reservation').value;

                    if (!selectedDate) {
                        console.error('Selected date cannot be empty.');
                        return;
                    }

                    try {
                        const response = await fetch(`/reserved-seats?date=${selectedDate}`);
                        const data = await response.json();

                       
                        document.querySelectorAll('.seat').forEach(seatElement => {
                        seatElement.classList.remove('taken');
                        });
                        
                        data.reservedSeats.forEach(seat => {
                        const seatElement = document.querySelector(`[data-seat="${seat}"]`);
                            if (seatElement) {
                                seatElement.classList.add('taken');
                            }
                        });
                    } catch (error) {
                        console.error('Error fetching reserved seats:', error);
                    }
                    }
                    document.addEventListener('DOMContentLoaded', fetchReservedSeats);

                    
        </script>
        </form>
    </body>
    
</hbs>
